/**
 * Auto-generated TypeScript definitions from .NET models
 * Generated by dotnet-typegen and combined by combine-types script
 * Do not edit this file manually - it will be regenerated
 */

// Account Dto
export interface AccountDto {
  id: number;
  name: string;
}


// Account
export interface Account {
  id: number;
  name: string;
  created_at: Date;
  updated_at: Date;
  users: User[];
  organizations: Organization[];
  contacts: Contact[];
}


// Auth Dto
export interface AuthDto {
  user: UserDto;
}


// Contact Detail Dto
export interface ContactDetailDto {
  id: number;
  first_name: string;
  last_name: string;
  organization_id: number;
  email: string;
  phone: string;
  address: string;
  city: string;
  region: string;
  country: string;
  postal_code: string;
  deleted_at: Date;
}


// Contact Dto
export interface ContactDto {
  id: number;
  name: string;
  phone: string;
  city: string;
  deleted_at: Date;
  organization: OrganizationSummaryDto;
}


// Contact Summary Dto
export interface ContactSummaryDto {
  id: number;
  name: string;
  city: string;
  phone: string;
}


// Contact View Model
export interface ContactViewModel {
  first_name: string;
  last_name: string;
  organization_id: number;
  email: string;
  phone: string;
  address: string;
  city: string;
  region: string;
  country: string;
  postal_code: string;
}


// Contact
export interface Contact {
  id: number;
  account_id: number;
  organization_id: number;
  first_name: string;
  last_name: string;
  email: string;
  phone: string;
  address: string;
  city: string;
  region: string;
  country: string;
  postal_code: string;
  deleted_at: Date;
  created_at: Date;
  updated_at: Date;
  account: Account;
  organization: Organization;
  name: string;
}


// Create User Form
export interface CreateUserForm {
  first_name: string;
  last_name: string;
  email: string;
  password: string;
  owner: boolean;
  photo: Object;
}


// Flash Dto
export interface FlashDto {
  error: string;
  success: string;
}


// Identity User
export interface IdentityUser<TKey extends IEquatable<TKey>> {
  id: TKey;
  user_name: string;
  normalized_user_name: string;
  email: string;
  normalized_email: string;
  email_confirmed: boolean;
  password_hash: string;
  security_stamp: string;
  concurrency_stamp: string;
  phone_number: string;
  phone_number_confirmed: boolean;
  two_factor_enabled: boolean;
  lockout_end: Date;
  lockout_enabled: boolean;
  access_failed_count: number;
}


// Inertia Shared Props
export type InertiaSharedProps<T = Record<string, unknown>> = T & {
  auth: AuthDto;
  flash: FlashDto;
  [key: string]: unknown;
};

// Organization Detail Dto
export interface OrganizationDetailDto {
  id: number;
  name: string;
  email: string;
  phone: string;
  address: string;
  city: string;
  region: string;
  country: string;
  postal_code: string;
  deleted_at: Date;
  contacts: ContactSummaryDto[];
}


// Organization Dto
export interface OrganizationDto {
  id: number;
  name: string;
  phone: string;
  city: string;
  deleted_at: Date;
}


// Organization Summary Dto
export interface OrganizationSummaryDto {
  name: string;
}


// Organization View Model
export interface OrganizationViewModel {
  name: string;
  email: string;
  phone: string;
  address: string;
  city: string;
  region: string;
  country: string;
  postal_code: string;
}


// Organization
export interface Organization {
  id: number;
  account_id: number;
  name: string;
  email: string;
  phone: string;
  address: string;
  city: string;
  region: string;
  country: string;
  postal_code: string;
  deleted_at: Date;
  created_at: Date;
  updated_at: Date;
  account: Account;
  contacts: Contact[];
}


// Paginated Data
export interface PaginatedData<T> {
  data: T[];
  links: PaginationLink[];
  meta: PaginationMeta;
}


// Pagination Link
export interface PaginationLink {
  url: string;
  label: string;
  active: boolean;
}


// Pagination Meta
export interface PaginationMeta {
  current_page: number;
  from: number;
  last_page: number;
  path: string;
  per_page: number;
  to: number;
  total: number;
}


// Search Filters
export interface SearchFilters {
  search: string;
  trashed: string;
}


// User Dto
export interface UserDto {
  id: number;
  first_name: string;
  last_name: string;
  email: string;
  owner: boolean;
  account: AccountDto;
}


// User Filters
export interface UserFilters extends SearchFilters {
  role: string;
}


// User List Dto
export interface UserListDto {
  id: number;
  name: string;
  email: string;
  owner: boolean;
  photo: string;
  deleted_at: Date;
}


// User View Model
export interface UserViewModel {
  first_name: string;
  last_name: string;
  email: string;
  password: string;
  owner: boolean;
}


// User
export interface User extends IdentityUser<number> {
  first_name: string;
  last_name: string;
  owner: boolean;
  photo_path: string;
  account_id: number;
  deleted_at: Date;
  created_at: Date;
  updated_at: Date;
  account: Account;
  name: string;
}

