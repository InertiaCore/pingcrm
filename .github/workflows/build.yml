name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '24.x'
  CI: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ClientApp/package-lock.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./ClientApp

      - name: Build frontend
        run: npm run build
        working-directory: ./ClientApp

      - name: Build backend with CI flag
        run: dotnet build --no-restore --configuration Release
        env:
          CI: true

      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
        env:
          CI: true

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: pingcrm:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
