// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PingCRM.Data;

#nullable disable

namespace PingCRM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250921230502_FixSeedDataStaticDates")]
    partial class FixSeedDataStaticDates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PingCRM.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Acme Corporation",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PingCRM.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("OrganizationId");

                    b.ToTable("contacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "sarah.johnson@techsolutions.com",
                            FirstName = "Sarah",
                            LastName = "Johnson",
                            OrganizationId = 1,
                            Phone = "+1 555-0111",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "michael.chen@techsolutions.com",
                            FirstName = "Michael",
                            LastName = "Chen",
                            OrganizationId = 1,
                            Phone = "+1 555-0222",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            Address = "456 Marketing Avenue",
                            City = "New York",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "emily.rodriguez@globalmarketing.com",
                            FirstName = "Emily",
                            LastName = "Rodriguez",
                            OrganizationId = 2,
                            Phone = "+1 555-0333",
                            PostalCode = "10001",
                            Region = "NY",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            Address = "789 Creative Lane",
                            City = "Los Angeles",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "david.wilson@designstudio.com",
                            FirstName = "David",
                            LastName = "Wilson",
                            OrganizationId = 3,
                            Phone = "+1 555-0444",
                            PostalCode = "90210",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 1,
                            Address = "321 Business Plaza",
                            City = "Chicago",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "lisa.anderson@consulting.com",
                            FirstName = "Lisa",
                            LastName = "Anderson",
                            OrganizationId = 4,
                            Phone = "+1 555-0555",
                            PostalCode = "60601",
                            Region = "IL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 1,
                            Address = "654 Innovation Drive",
                            City = "Austin",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "robert.taylor@innovationlabs.com",
                            FirstName = "Robert",
                            LastName = "Taylor",
                            OrganizationId = 5,
                            Phone = "+1 555-0666",
                            PostalCode = "73301",
                            Region = "TX",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 1,
                            Address = "987 Independent Way",
                            City = "Seattle",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "jennifer.brown@freelancer.com",
                            FirstName = "Jennifer",
                            LastName = "Brown",
                            Phone = "+1 555-0777",
                            PostalCode = "98101",
                            Region = "WA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 1,
                            Address = "147 Solo Street",
                            City = "Denver",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "james.miller@consultant.com",
                            FirstName = "James",
                            LastName = "Miller",
                            Phone = "+1 555-0888",
                            PostalCode = "80201",
                            Region = "CO",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 1,
                            Address = "456 Marketing Avenue",
                            City = "New York",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "patricia.garcia@globalmarketing.com",
                            FirstName = "Patricia",
                            LastName = "Garcia",
                            OrganizationId = 2,
                            Phone = "+1 555-0901",
                            PostalCode = "10001",
                            Region = "NY",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 1,
                            Address = "789 Creative Lane",
                            City = "Los Angeles",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "chris.martinez@designstudio.com",
                            FirstName = "Christopher",
                            LastName = "Martinez",
                            OrganizationId = 3,
                            Phone = "+1 555-1001",
                            PostalCode = "90210",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "amanda.davis@techsolutions.com",
                            FirstName = "Amanda",
                            LastName = "Davis",
                            OrganizationId = 1,
                            Phone = "+1 555-1101",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 1,
                            Address = "321 Business Plaza",
                            City = "Chicago",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "daniel.lopez@consulting.com",
                            FirstName = "Daniel",
                            LastName = "Lopez",
                            OrganizationId = 4,
                            Phone = "+1 555-1201",
                            PostalCode = "60601",
                            Region = "IL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 1,
                            Address = "654 Innovation Drive",
                            City = "Austin",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "michelle.thomas@innovationlabs.com",
                            FirstName = "Michelle",
                            LastName = "Thomas",
                            OrganizationId = 5,
                            Phone = "+1 555-1301",
                            PostalCode = "73301",
                            Region = "TX",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 1,
                            Address = "258 Remote Street",
                            City = "Portland",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "kevin.jackson@freelancer.com",
                            FirstName = "Kevin",
                            LastName = "Jackson",
                            Phone = "+1 555-1401",
                            PostalCode = "97201",
                            Region = "OR",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 1,
                            Address = "456 Marketing Avenue",
                            City = "New York",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "laura.white@globalmarketing.com",
                            FirstName = "Laura",
                            LastName = "White",
                            OrganizationId = 2,
                            Phone = "+1 555-1501",
                            PostalCode = "10001",
                            Region = "NY",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "brian.harris@techsolutions.com",
                            FirstName = "Brian",
                            LastName = "Harris",
                            OrganizationId = 1,
                            Phone = "+1 555-1601",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 1,
                            Address = "789 Creative Lane",
                            City = "Los Angeles",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "samantha.clark@designstudio.com",
                            FirstName = "Samantha",
                            LastName = "Clark",
                            OrganizationId = 3,
                            Phone = "+1 555-1701",
                            PostalCode = "90210",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 1,
                            Address = "321 Business Plaza",
                            City = "Chicago",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ryan.lewis@consulting.com",
                            FirstName = "Ryan",
                            LastName = "Lewis",
                            OrganizationId = 4,
                            Phone = "+1 555-1801",
                            PostalCode = "60601",
                            Region = "IL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 1,
                            Address = "654 Innovation Drive",
                            City = "Austin",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "rachel.robinson@innovationlabs.com",
                            FirstName = "Rachel",
                            LastName = "Robinson",
                            OrganizationId = 5,
                            Phone = "+1 555-1901",
                            PostalCode = "73301",
                            Region = "TX",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 1,
                            Address = "369 Freelance Lane",
                            City = "Miami",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "steven.walker@independent.com",
                            FirstName = "Steven",
                            LastName = "Walker",
                            Phone = "+1 555-2001",
                            PostalCode = "33101",
                            Region = "FL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "nicole.hall@techsolutions.com",
                            FirstName = "Nicole",
                            LastName = "Hall",
                            OrganizationId = 1,
                            Phone = "+1 555-2101",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 1,
                            Address = "456 Marketing Avenue",
                            City = "New York",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "andrew.young@globalmarketing.com",
                            FirstName = "Andrew",
                            LastName = "Young",
                            OrganizationId = 2,
                            Phone = "+1 555-2201",
                            PostalCode = "10001",
                            Region = "NY",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 1,
                            Address = "789 Creative Lane",
                            City = "Los Angeles",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "jessica.king@designstudio.com",
                            FirstName = "Jessica",
                            LastName = "King",
                            OrganizationId = 3,
                            Phone = "+1 555-2301",
                            PostalCode = "90210",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 1,
                            Address = "321 Business Plaza",
                            City = "Chicago",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "joshua.wright@consulting.com",
                            FirstName = "Joshua",
                            LastName = "Wright",
                            OrganizationId = 4,
                            Phone = "+1 555-2401",
                            PostalCode = "60601",
                            Region = "IL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 1,
                            Address = "654 Innovation Drive",
                            City = "Austin",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "stephanie.hill@innovationlabs.com",
                            FirstName = "Stephanie",
                            LastName = "Hill",
                            OrganizationId = 5,
                            Phone = "+1 555-2501",
                            PostalCode = "73301",
                            Region = "TX",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 1,
                            Address = "789 Independent Blvd",
                            City = "Boston",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "matthew.scott@contractor.com",
                            FirstName = "Matthew",
                            LastName = "Scott",
                            Phone = "+1 555-2601",
                            PostalCode = "02101",
                            Region = "MA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "ashley.green@techsolutions.com",
                            FirstName = "Ashley",
                            LastName = "Green",
                            OrganizationId = 1,
                            Phone = "+1 555-2701",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 1,
                            Address = "456 Marketing Avenue",
                            City = "New York",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "justin.adams@globalmarketing.com",
                            FirstName = "Justin",
                            LastName = "Adams",
                            OrganizationId = 2,
                            Phone = "+1 555-2801",
                            PostalCode = "10001",
                            Region = "NY",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 1,
                            Address = "789 Creative Lane",
                            City = "Los Angeles",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "megan.baker@designstudio.com",
                            FirstName = "Megan",
                            LastName = "Baker",
                            OrganizationId = 3,
                            Phone = "+1 555-2901",
                            PostalCode = "90210",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 1,
                            Address = "321 Business Plaza",
                            City = "Chicago",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "brandon.nelson@consulting.com",
                            FirstName = "Brandon",
                            LastName = "Nelson",
                            OrganizationId = 4,
                            Phone = "+1 555-3001",
                            PostalCode = "60601",
                            Region = "IL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PingCRM.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DeletedAt");

                    b.ToTable("organizations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Address = "123 Tech Street",
                            City = "San Francisco",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "info@techsolutions.com",
                            Name = "Tech Solutions Inc",
                            Phone = "+1 555-0123",
                            PostalCode = "94105",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Address = "456 Marketing Avenue",
                            City = "New York",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "contact@globalmarketing.com",
                            Name = "Global Marketing Group",
                            Phone = "+1 555-0456",
                            PostalCode = "10001",
                            Region = "NY",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            Address = "789 Creative Lane",
                            City = "Los Angeles",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "hello@designstudio.com",
                            Name = "Design Studio Pro",
                            Phone = "+1 555-0789",
                            PostalCode = "90210",
                            Region = "CA",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            Address = "321 Business Plaza",
                            City = "Chicago",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "info@consulting.com",
                            Name = "Consulting Partners Ltd",
                            Phone = "+1 555-0321",
                            PostalCode = "60601",
                            Region = "IL",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 1,
                            Address = "654 Innovation Drive",
                            City = "Austin",
                            Country = "US",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "contact@innovationlabs.com",
                            Name = "Innovation Labs",
                            Phone = "+1 555-0654",
                            PostalCode = "73301",
                            Region = "TX",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PingCRM.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Owner")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DeletedAt");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AccountId = 1,
                            ConcurrencyStamp = "b39e5818-2933-4f58-81e6-43454c8ace18",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "johndoe@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            LastName = "Doe",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHNDOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHNDOE@EXAMPLE.COM",
                            Owner = true,
                            PasswordHash = "AQAAAAIAAYagAAAAEE+mu9jINv0N6nD2FpcBHSgO5qHRTqk2cGmXczwk/o60s0eNOaReww+mkt7Hn1E8Og==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e720693a-a522-46e5-b9ed-4260d75432cb",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserName = "johndoe@example.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PingCRM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PingCRM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PingCRM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PingCRM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PingCRM.Models.Contact", b =>
                {
                    b.HasOne("PingCRM.Models.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PingCRM.Models.Organization", "Organization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Account");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PingCRM.Models.Organization", b =>
                {
                    b.HasOne("PingCRM.Models.Account", "Account")
                        .WithMany("Organizations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PingCRM.Models.User", b =>
                {
                    b.HasOne("PingCRM.Models.Account", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Account");
                });

            modelBuilder.Entity("PingCRM.Models.Account", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Organizations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PingCRM.Models.Organization", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
